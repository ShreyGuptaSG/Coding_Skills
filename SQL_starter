## SQL notes

#JOINS 
Select date(payment_date), customer.customer_id, email, amount
from customer
INNER JOIN payment
ON customer.customer_id = payment.customer_id
ORDER BY customer_id

## TWO JOINS
SELECT DISTINCT title, first_name, last_name from ((film
INNER JOIN film_actor
ON film.film_id = film_actor.film_id)
INNER JOIN actor
ON film_actor.actor_id = actor.actor_id)
WHERE first_name = 'Nick' AND last_name = 'Wahlberg'

## SubQuery
SELECT student.grade
FROM test_scores
WHERE grade > (SELECT AVG(grade) FROM test_scores)

### USING SubQuery with JOIN
SELECT title 
FROM ((inventory
INNER JOIN film 
ON film.film_id = inventory.film_id)
INNER JOIN rental
ON inventory.inventory_id = rental.inventory_id)
WHERE rental_date BETWEEN '2005-05-29' AND '2005-05-30' 

#OR 
SELECT film_id, title 
FROM film
WHERE film_id IN
(SELECT inventory.film_id 
FROM rental
INNER JOIN inventory
ON inventory.inventory_id = rental.inventory_id
WHERE rental_date BETWEEN '2005-05-29' AND '2005-05-30')

## WHERE EXISTS
SELECT first_name, last_name, sum(amount)
FROM customer as c
INNER JOIN payment as p
ON c.customer_id = p.customer_id 
WHERE EXISTS
(	SELECT * 
	FROM payment as p
	WHERE p.customer_id = c.customer_id AND amount > 11)
GROUP BY first_name, last_name

#self JOIN
SELECT f1.title, f2.title, f1.length 
FROM film as f1
INNER JOIN film as f2
ON f1.film_id != f2.film_id AND f1.length = f2.length

GROUP BY 
Select date(payment_date), customer.customer_id, email, sum(amount)
from customer
group by customer.customer_id, email, date(payment_date)
INNER JOIN payment
ON customer.customer_id = payment.customer_id
ORDER BY customer_id

# Create TABLE
CREATE TABLE students ( student_id SERIAL PRIMARY KEY, first_name VARCHAR (250), last_name VARCHAR (250), 
					   homeroom_number INTEGER UNIQUE NOT NULL, 
					   phone VARCHAR (500) UNIQUE,
					   email VARCHAR (500) UNIQUE, graduation_year TIMESTAMP )

CREATE TABLE teachers (teacher_id SERIAL PRIMARY KEY, first_name VARCHAR (250), last_name VARCHAR (250),
					   homeroom_number INTEGER,
					   department VARCHAR (500), email VARCHAR (500) UNIQUE, phone VARCHAR (500) UNIQUE)
					   
INSERT INTO students(first_name, last_name, homeroom_number, phone, graduation_year)
VALUES 
('Mark ','Watney','5' , '777-555-1234', '2022-02-09 07:00:00')
UPDATE students
SET graduation_year = '2035-01-01 00:00:00'

INSERT INTO teachers(first_name, last_name, homeroom_number, department, email, phone)
VALUES 
('Jonas','Salk','5' , 'Biology', 'jsalk@school.org', '777-555-4321')

## CASE
select 
SUM(CASE rating
	WHEN 'R' THEN 1
	ELSE 0
	END),
SUM(CASE rating
	WHEN 'PG' THEN 1
	ELSE 0
	END),
SUM(CASE rating
	WHEN 'PG-13' THEN 1
	ELSE 0
END)
FROM film
## DATE
show TIMEZONE
SELECT NOW()
SELECT TIMEOFDAY()
SELECT CURRENT_TIME
SELECT CURRENT_DATE

SELECT COUNT(*), sum(amount)
FROM payment
WHERE TO_CHAR(payment_date, 'FMDay')= 'Monday')



### EXAMPLE
SELECT * FROM cd.facilities
SELECT * FROM cd.bookings
SELECT * FROM cd.members

SELECT name, membercost FROM cd.facilities

SELECT * FROM cd.facilities WHERE membercost !=0 AND membercost < monthlymaintenance/50
SELECT * FROM cd.facilities WHERE name LIKE '%Tennis%'
SELECT * FROM cd.facilities WHERE facid IN (1,5)
SELECT * FROM cd.members WHERE joindate > '2012-09-01 00:00:00'
SELECT DISTINCT surname FROM cd.members ORDER BY surname ASC limit 10 
SELECT joindate FROM cd.members ORDER BY memid DESC
SELECT COUNT(*) FROM cd.facilities WHERE guestcost >= 10
SELECT facid, SUM(slots) FROM cd.bookings
    WHERE starttime > '2012-09-01 00:00:00'
	GROUP BY facid
SELECT facid, SUM(slots) FROM cd.bookings
	GROUP BY facid
	HAVING SUM(slots)  > 1000

SELECT name, starttime FROM cd.bookings
INNER JOIN cd.facilities
ON cd.bookings.facid = cd.facilities.facid
WHERE name LIKE '%Tennis C%'AND starttime BETWEEN '2012-09-21 00:00:00' AND '2012-09-21 23:59:59'
ORDER BY starttime ASC

SELECT firstname, surname, starttime FROM cd.members
INNER JOIN cd.bookings
ON cd.members.memid = cd.bookings.memid
WHERE cd.members.firstname='David' 
AND cd.members.surname='Farrell';


